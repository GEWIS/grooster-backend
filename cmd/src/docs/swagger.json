{
    "swagger": "2.0",
    "info": {
        "description": "A GEWIS Rooster maker",
        "title": "GRooster",
        "contact": {},
        "version": "0.1"
    },
    "paths": {
        "/auth/callback": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Validates state, exchanges code for token, and returns user info",
                "tags": [
                    "Auth"
                ],
                "summary": "Handle OAuth2 Callback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "State returned from provider",
                        "name": "state",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization code from provider",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User info and token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: missing or invalid state",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/redirect": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Generates state, sets a cookie, and redirects to Google OIDC",
                "tags": [
                    "Auth"
                ],
                "summary": "Redirect to OIDC provider",
                "responses": {
                    "302": {
                        "description": "redirect",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "pkg server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/roster/": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roster"
                ],
                "summary": "Get all rosters",
                "operationId": "getRosters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Roster after this date",
                        "name": "afterDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Roster"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roster"
                ],
                "summary": "CreateRoster a new roster",
                "operationId": "createRoster",
                "parameters": [
                    {
                        "description": "Roster input",
                        "name": "createParams",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RosterCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Roster"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/roster/answer": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roster"
                ],
                "summary": "Create a new roster shift answer",
                "operationId": "createRosterAnswer",
                "parameters": [
                    {
                        "description": "Roster answer input",
                        "name": "createParams",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RosterAnswerCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RosterAnswer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/roster/answer/{id}": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roster"
                ],
                "summary": "Updates a roster answer with the new value",
                "operationId": "updateRosterAnswer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roster Answer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New answer value",
                        "name": "updateParams",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RosterAnswerUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RosterAnswer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/roster/saved-shift/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roster"
                ],
                "summary": "Get all saved shifts for a specific roster",
                "operationId": "getSavedRoster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Saved Shifts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SavedShift"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "SavedShift not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roster"
                ],
                "summary": "Update a specific saved shift",
                "operationId": "updateSavedShift",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SavedShift ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update data",
                        "name": "updateParams",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SavedShiftUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SavedShift"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "SavedShift not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/roster/shift": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roster"
                ],
                "summary": "Create a new roster shift",
                "operationId": "createRosterShift",
                "parameters": [
                    {
                        "description": "Roster shift input",
                        "name": "createParams",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RosterShiftCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RosterShift"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/roster/shift/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roster"
                ],
                "summary": "Deletes a roster shift",
                "operationId": "deleteRosterShift",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roster Answer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/roster/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roster"
                ],
                "summary": "Get a roster using its ID",
                "operationId": "getRoster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Roster"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roster"
                ],
                "summary": "DeleteRoster a roster",
                "operationId": "deleteRoster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roster"
                ],
                "summary": "Update a roster",
                "operationId": "updateRoster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Roster input",
                        "name": "updateParams",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RosterUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Roster"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/roster/{id}/save": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roster"
                ],
                "summary": "Save a specific roster",
                "operationId": "rosterSave",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "description": "create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "CreateRoster a new user",
                "parameters": [
                    {
                        "description": "User input",
                        "name": "createParams",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserCreateOrUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "UpdateRoster a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User input",
                        "name": "updateParams",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserCreateOrUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "DeleteRoster a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Organ": {
            "description": "An organ that users can be part of.",
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "Roster": {
            "description": "Roster info with a gorm model, name, users, shifts and values",
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organ": {
                    "type": "integer"
                },
                "rosterAnswer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RosterAnswer"
                    }
                },
                "rosterShift": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RosterShift"
                    }
                },
                "saved": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "RosterAnswer": {
            "description": "An answer from a user to a shift.",
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "rosterId": {
                    "type": "integer"
                },
                "rosterShiftId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "RosterAnswerCreateRequest": {
            "type": "object",
            "properties": {
                "rosterId": {
                    "type": "integer"
                },
                "rosterShiftId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "RosterAnswerUpdateRequest": {
            "description": "Request to update a certain roster answer",
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "RosterCreateRequest": {
            "description": "Roster create request",
            "type": "object",
            "properties": {
                "date": {
                    "description": "Date the date that this roster will take place",
                    "type": "string"
                },
                "name": {
                    "description": "Name the name of the new roster",
                    "type": "string"
                },
                "organId": {
                    "description": "Organ that the roster belongs to",
                    "type": "integer"
                }
            }
        },
        "RosterShift": {
            "description": "One column of a roster",
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "rosterId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "RosterShiftCreateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "rosterId": {
                    "type": "integer"
                }
            }
        },
        "RosterUpdateRequest": {
            "type": "object"
        },
        "SavedShift": {
            "description": "A saved roster",
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "rosterId": {
                    "type": "integer"
                },
                "rosterShift": {
                    "$ref": "#/definitions/RosterShift"
                },
                "rosterShiftId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                }
            }
        },
        "SavedShiftUpdateRequest": {
            "description": "Request to update a certain saved shift",
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "gewis_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Organ"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.UserCreateOrUpdate": {
            "type": "object",
            "properties": {
                "gewisid": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Organ"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}